.msp-container {
    display: flex; /* Use flexbox for layout */
    flex-direction: column; /* Stack elements vertically */
    position: relative; /* Ensure proper positioning for child elements */
    width: 100%; /* Ensure the container spans the full width */
    height: auto; /* Allow the container to grow based on its content */
}

.msp-layout-static {
    display: flex;
    flex-direction: column; /* Stack children vertically */
    position: relative;
    width: 100%;
    height: auto; /* Allow height to adjust based on content */
}

.msp-viewport {
    position: relative; /* Ensure correct stacking of children */
    width: 100%;
    height: 400px; /* Set a fixed height */
    margin-bottom: 10px; /* Add spacing below the viewport */
    overflow: hidden; /* Prevent overflow */
}

.msp-canvas {
    width: 100%;
    height: 400px; /* Set a fixed height */
    display: block;
    position: absolute; /* Ensure it stays in the viewport */
    top: 0; /* Align to the top */
    left: 0; /* Align to the left */
    margin-bottom: 10px; /* Add spacing below the canvas */
    z-index: 1; /* Set a lower z-index for the canvas */
}

.msp-viewport-top-left-controls {
    position: absolute; /* Position controls relative to the viewport */
    top: 10px; /* Adjust as needed */
    left: 10px; /* Adjust as needed */
    z-index: 10; /* Ensure controls appear above the canvas */
    pointer-events: auto; /* Allow interaction with the controls */
}

.msp-viewport-controls {
    position: absolute; /* Position controls relative to the viewport */
    top: 10px; /* Adjust as needed */
    right: 10px; /* Adjust as needed */
    z-index: 10; /* Ensure controls appear above the canvas */
    pointer-events: auto; /* Allow interaction with the controls */
}

.msp-log {
    pointer-events: auto; /* Allow interaction with the log */
    position: relative !important; /* Default positioning to stack below the canvas */
    max-height: 100px; /* Optional: Limit the height of the log */
    overflow-y: auto; /* Optional: Add scrolling if content overflows */
    background-color: #f9f9f9; /* Optional: Add a background for better visibility */
    border: 1px solid #ccc; /* Optional: Add a border for separation */
    padding: 5px; /* Optional: Add padding for better readability */
    margin-top: 10px !important; /* Optional: Add spacing above the log */
}

.msp-hover-box-wrapper {
    position: relative; /* Ensure proper positioning for child elements */
}

.msp-hover-box-body {
    display: none; /* Hide the additional content by default */
    position: absolute; /* Position it relative to the wrapper */
    top: 100%; /* Position it below the button */
    left: 0; /* Align it to the left of the wrapper */
    z-index: 20; /* Ensure it appears above other elements */
    background-color: #fff; /* Optional: Add a background color */
    border: 1px solid #ccc; /* Optional: Add a border */
    padding: 5px; /* Optional: Add padding */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* Optional: Add a shadow */
}

.msp-hover-box-wrapper:hover .msp-hover-box-body {
    display: block; /* Show the additional content when hovering over the wrapper */
}